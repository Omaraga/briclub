<?php

namespace frontend\controllers;

use common\models\Messages;
use common\models\TicketTypes;
use frontend\models\forms\MessageForm;
use Yii;
use common\models\Tickets;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use frontend\models\forms\TicketForm;
use yii\web\UploadedFile;


class SupportController extends Controller
{
    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest){
            $this->redirect('/site/login');
            return false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Tickets models.
     * @return mixed
     */
    public function actionIndex()
    {
        $user = Yii::$app->user->identity;
        $tickets = Tickets::find()->where(['user_id' => $user->id])->orderBy('id DESC')->all();
        return $this->render('index', [
            'tickets' => $tickets,
        ]);
    }

    /**
     * Displays a single Tickets model.
     * @param integer $id
     * @return mixed
     * @throws NotFoundHttpException if the model cannot be found
     */
    public function actionView($id)
    {
        $user = Yii::$app->user->identity;
        $ticket = Tickets::find()->where(['id'=>$id,'user_id'=>$user->id])->one();
        $messages = [];
        $messageForm = new MessageForm();
        if(!empty($ticket)) {
            $messages = Messages::find()->where(['ticket_id' => $ticket['id'], 'is_private'=>null])->all();
            if ($messageForm->load(Yii::$app->request->post()) && $messageForm->validate()) {
                $ticket->status = 3;
                $ticket->save();
                $message = new Messages();
                $message->time = time();
                $message->user_id = Yii::$app->user->id;
                $message->ticket_id = $ticket['id'];
                $message->text = $messageForm->text;
                $file = UploadedFile::getInstance($messageForm, 'file');
                $link = null;
                if ($file && $file->tempName) {
                    $messageForm->file = $file;
                    if ($messageForm->validate(['file'])) {
                        $rand = rand(900000, 9000000);
                        $dir = Yii::getAlias('@frontend/web/docs/tickets/');
                        $dir2 = Yii::getAlias('docs/tickets/');
                        $fileName = $rand . '.' . $messageForm->file->extension;
                        $messageForm->file->saveAs($dir . $fileName);
                        $messageForm->file = $fileName; // без этого ошибка
                        $link = '/' . $dir2 . $fileName;
                    }
                }
                $message->link = $link;

                if ($message->save()) {
                    Yii::$app->getSession()->setFlash('success', Yii::t('users', 'Сообщение отправлено!'));
                } else {
                    Yii::$app->getSession()->setFlash('danger', Yii::t('users', 'Произошла ошибка, попробуйте повторить!'));
                }
                $this->redirect('/support');

            }
        }else{
            Yii::$app->getSession()->setFlash('danger', Yii::t('users', 'Произошла ошибка, попробуйте повторить!'));
            return $this->redirect('/support');
        }

        return $this->render('view', [
            'ticket' => $ticket,
            'messages' => $messages,
            'messageForm' => $messageForm,
            'user' => $user,
        ]);
    }

    /**
     * @return string
     */
    public function actionCreate()
    {
        $ticketForm = new TicketForm();
        if ($ticketForm->load(Yii::$app->request->post()) && $ticketForm->validate()) {
            $ticket = new Tickets();
            $ticket->user_id = Yii::$app->user->id;
            $ticket->status = 3;
            $ticket->title = $ticketForm['title'];
            $ticket->category = $ticketForm['category'];
            $ticket->time = time();
            $ticket->save();

            $message = new Messages();
            $message->time = time();
            $message->user_id = Yii::$app->user->id;
            $message->ticket_id = $ticket['id'];
            $message->text = $ticketForm->text;

            $file = UploadedFile::getInstance($ticketForm, 'file');
            $link = null;
            if ($file && $file->tempName) {
                $ticketForm->file = $file;
                if ($ticketForm->validate(['file'])) {
                    $rand = rand(900000,9000000);
                    $dir = Yii::getAlias('@frontend/web/docs/tickets/');
                    $dir2 = Yii::getAlias('docs/tickets/');
                    $fileName = $rand . '.' . $ticketForm->file->extension;
                    $ticketForm->file->saveAs($dir . $fileName);
                    $ticketForm->file = $fileName; // без этого ошибка
                    $link = '/'.$dir2 . $fileName;
                }
            }
            $message->link = $link;

            if($message->save()){
                Yii::$app->getSession()->setFlash('success', Yii::t('users', 'Запрос принят!'));
            }else{
                Yii::$app->getSession()->setFlash('danger', Yii::t('users', 'Произошла ошибка, попробуйте повторить!'));
            }
            $this->redirect('/support');

        }
        $ticketsType = ArrayHelper::map(TicketTypes::find()->all(), 'id', 'title');
        return $this->render('create', [
            'ticketForm' => $ticketForm,
            'ticketsType' => $ticketsType
        ]);
    }

}
